[tool.poetry]
name = "starlite-hello-world"
version = "0.1.0"
description = ""
authors = ["Peter Schutt <peter.github@proton.me>"]
packages = [
    { include = "app" }
]

[tool.poetry.dependencies]
python = "^3.10"
starlite = "*"
# starlite = {path = "../starlite", develop = true}
uvicorn = "*"
piccolo = {version = "*", extras = ["sqlite"]}
piccolo_admin = "*"
# piccolo_admin = { extras = ["testing"], path = "../piccolo_admin", develop=true }

[tool.poetry.dev-dependencies]
black = "*"
mypy = "*"
pre-commit = "*"
pylint = "*"
pytest = "*"
pytest-cov = "*"
starlite = { extras = ["testing"], version = "*" }
# starlite = { extras = ["testing"], path = "../starlite", develop = true}

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.coverage.report]
show_missing = true
exclude_lines = [
    'if TYPE_CHECKING:',
    'pragma: no cover',
    "if __name__ == '__main__':",
]

[tool.coverage.run]
omit = [
    "tests/*",
]

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = false
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
ignore_missing_imports = true
implicit_reexport = false
show_error_codes = true
strict = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pytest.ini_options]
addopts = "--cov=main -v"

[tool.pylint.MESSAGE_CONTROL]
disable = [
    "missing-module-docstring",
]
enable = "useless-suppression"

[tool.pylint.BASIC]
no-docstring-rgx="test.*$"

[tool.pylint.FORMAT]
max-line-length = "120"
